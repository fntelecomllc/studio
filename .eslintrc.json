{
  "$schema": "https://json.schemastore.org/eslintrc.json",
  "extends": [
    "next/core-web-vitals",
    "next/typescript",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json"
  },
  "plugins": ["@typescript-eslint"],
  "rules": {
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_",
        "caughtErrorsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-unsafe-assignment": "error",
    "@typescript-eslint/no-unsafe-member-access": "error",
    "@typescript-eslint/no-unsafe-call": "error",
    "@typescript-eslint/no-unsafe-return": "error",
    "@typescript-eslint/explicit-function-return-type": [
      "error",
      {
        "allowExpressions": true,
        "allowTypedFunctionExpressions": true,
        "allowHigherOrderFunctions": true,
        "allowDirectConstAssertionInArrowFunctions": true
      }
    ],
    "@typescript-eslint/strict-boolean-expressions": [
      "error",
      {
        "allowString": false,
        "allowNumber": false,
        "allowNullableObject": false
      }
    ],
    "no-restricted-syntax": [
      "error",
      {
        "selector": "TSTypeReference[typeName.name='number']:has(TSPropertySignature[key.name=/Id$/])",
        "message": "Use SafeBigInt for ID fields instead of number"
      },
      {
        "selector": "TSTypeReference[typeName.name='number']:has(TSPropertySignature[key.name=/.*[Cc]ount$/])",
        "message": "Use SafeBigInt for count fields instead of number"
      },
      {
        "selector": "TSTypeReference[typeName.name='number']:has(TSPropertySignature[key.name=/.*[Ss]ize$/])",
        "message": "Use SafeBigInt for size fields instead of number"
      }
    ]
  },
  "overrides": [
    {
      "files": ["**/__tests__/**/*", "**/*.test.*", "**/*.spec.*", "**/tests/**/*"],
      "rules": {
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-empty-object-type": "off",
        "@typescript-eslint/no-unsafe-function-type": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-unsafe-member-access": "off",
        "@typescript-eslint/no-unsafe-call": "off",
        "@typescript-eslint/no-unsafe-return": "off",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/strict-boolean-expressions": "off"
      }
    },
    {
      "files": ["*.js", "*.mjs"],
      "rules": {
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/explicit-function-return-type": "off"
      }
    },
    {
      "files": ["src/lib/api-client/models/**/*", "src/lib/types/generated/**/*"],
      "rules": {
        "no-restricted-syntax": [
          "error",
          {
            "selector": "TSPropertySignature[key.name=/.*[Ii]d$/][typeAnnotation.typeAnnotation.type='TSNumberKeyword']",
            "message": "Generated models must use SafeBigInt for ID fields, not number. Check contract sync pipeline."
          }
        ]
      }
    }
  ]
}
