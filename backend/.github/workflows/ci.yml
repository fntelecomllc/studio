name: Backend CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/**'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.18'
          cache: true
          cache-dependency-path: backend/go.sum

      - name: Install dependencies
        run: cd backend && go mod download

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          working-directory: backend
          args: --timeout=5m --config=.golangci.yml

      - name: Run unit tests with race detection
        run: cd backend && go test -race -short ./...

      - name: Run integration tests
        run: cd backend && go test -tags=integration ./...
        env:
          TEST_DB_URL: postgres://test:test@localhost:5432/test_db?sslmode=disable

      - name: Run schema validator
        run: |
          cd backend
          chmod +x ./scripts/run_schema_validator.sh
          ./scripts/run_schema_validator.sh "postgres://test:test@localhost:5432/test_db?sslmode=disable"
        
      - name: Generate coverage report
        run: cd backend && go run scripts/test_coverage_report.go
        
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: backend/coverage_report.json

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.18'
          cache: true
          cache-dependency-path: backend/go.sum

      - name: Build
        run: cd backend && go build -v ./...

      - name: Build binary
        run: cd backend && go build -o domainflow-apiserver cmd/api/main.go

      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: domainflow-apiserver
          path: backend/domainflow-apiserver